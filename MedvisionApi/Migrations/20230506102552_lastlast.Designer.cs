// <auto-generated />
using MedvisionApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedvisionApi.Migrations
{
    [DbContext(typeof(MedvisiondbContext))]
    [Migration("20230506102552_lastlast")]
    partial class lastlast
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedvisionApi.Models.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("content");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC0730598A5F");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Commentaire", (string)null);
                });

            modelBuilder.Entity("MedvisionApi.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC075430816A");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("MedvisionApi.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fullpath")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("fullpath")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("name")
                        .IsFixedLength();

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("url")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__Photo__3214EC070614F55D");

                    b.HasIndex("PostId");

                    b.ToTable("Photo", (string)null);
                });

            modelBuilder.Entity("MedvisionApi.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Countcomment")
                        .HasColumnType("int")
                        .HasColumnName("countcomment");

                    b.Property<int>("Countlike")
                        .HasColumnType("int")
                        .HasColumnName("countlike");

                    b.Property<int>("Countshare")
                        .HasColumnType("int")
                        .HasColumnName("countshare");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<int>("Reserve")
                        .HasColumnType("int")
                        .HasColumnName("reserve");

                    b.Property<int>("Time")
                        .HasColumnType("int")
                        .HasColumnName("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Post__3214EC078C3BB587");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Countcomment = 0,
                            Countlike = 0,
                            Countshare = 0,
                            Description = "islem@gmail.com",
                            Reserve = 0,
                            Time = 123456,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MedvisionApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("phone");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("photo_url");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC076E48FD4E");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "chrifa.bahrouni@gmail.com",
                            Name = " chrifa bahrouni",
                            Password = "123456",
                            Phone = "99828278",
                            PhotoUrl = "https://www.google.com"
                        },
                        new
                        {
                            Id = 2,
                            Email = "chrifa.bahrouni123@gmail.com",
                            Name = " chrifa ",
                            Password = "123456",
                            Phone = "99828278",
                            PhotoUrl = "https://www.google.com"
                        },
                        new
                        {
                            Id = 3,
                            Email = "islem@gmail.com",
                            Name = " Islem",
                            Password = "123456",
                            Phone = "99828278",
                            PhotoUrl = "https://www.google.com"
                        });
                });

            modelBuilder.Entity("MedvisionApi.Models.Commentaire", b =>
                {
                    b.HasOne("MedvisionApi.Models.Post", "Post")
                        .WithMany("Commentaires")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_comment");

                    b.HasOne("MedvisionApi.Models.User", "User")
                        .WithMany("Commentaires")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_user_comment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedvisionApi.Models.Notification", b =>
                {
                    b.HasOne("MedvisionApi.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Notif_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedvisionApi.Models.Photo", b =>
                {
                    b.HasOne("MedvisionApi.Models.Post", "Post")
                        .WithMany("Photos")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_photo");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("MedvisionApi.Models.Post", b =>
                {
                    b.HasOne("MedvisionApi.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MedvisionApi.Models.Post", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MedvisionApi.Models.User", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
